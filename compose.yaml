services:

  # Start a database container and populate a Docker volume with the data.
  mariadb:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --log-bin=mysqld-bin
    container_name: ${MYSQL_HOST}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - tematres_db:/var/lib/mysql
    restart: always
    networks:
      - tematres-nw

  # Populate tematres volume with current stable version of TemaTres files
  # and according settings.
  tematres:
    build: ./tematres
    container_name: tematres
    environment:
      DBDRIVER: ${DBDRIVER}
      SERVER: ${MYSQL_HOST}
      DBNAME: ${MYSQL_DATABASE}
      DBLOGIN: ${MYSQL_USER}
      DBPASS: ${MYSQL_PASSWORD}
      DBPREFIX: ${DBPREFIX}
    volumes:
      - tematres:/opt/tematres
    networks:
      - tematres-nw

  # Start the php container with MySql extension installed.
  app:
    build: ./php5_apache_mysql5_enabled
    container_name: tematres_php5.6-fpm_mysql
    depends_on:
    - tematres
    volumes:
      - tematres:/var/www/html
    restart: always
    networks:
      - tematres-nw

  # Start the custom Nginx webserver.
  nginx:
    build: ./nginx
    container_name: tematres_nginx
    ports:
      - ${PORT}:80
    environment:
      SERVER_NAME: ${VIRTUAL_HOST}
      UPSTREAM_HANDLE: app
      UPSTREAM_PORT: 9000
      SSL: 'false'
    depends_on:
      - app
      - mariadb
    volumes:
      - tematres:/var/www/html
    restart: always
    networks:
      - tematres-nw

networks:
  tematres-nw:
    driver: bridge

volumes:
  tematres:
  tematres_db:
